/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package seno;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;

import org.junit.jupiter.api.Test;
import java.math.BigDecimal;

public class AppTest {

	@Test
	public void senoTest() throws Exception {
		Calculadora calculadora = new Calculadora();
		assertEquals(new BigDecimal("0.1764705882352941176470588235294118"), calculadora.seno(new BigDecimal(15), new BigDecimal(85)));
	}

	@Test
	public void senoTestCatetoValidoInferior() throws Exception {
		Calculadora calculadora = new Calculadora();
		assertEquals(new BigDecimal("0.0125"), calculadora.seno(new BigDecimal(1), new BigDecimal(80)));
	}
	
	@Test
	public void senoTestCatetoValidoSuperior() throws Exception {
		Calculadora calculadora = new Calculadora();
		assertEquals(new BigDecimal("0.625"), calculadora.seno(new BigDecimal(50), new BigDecimal(80)));
	}
	
	@Test
	public void senoTestHipotenusaValidoInferior() throws Exception {
		Calculadora calculadora = new Calculadora();
		assertEquals(new BigDecimal("0.1428571428571428571428571428571429"), calculadora.seno(new BigDecimal(10), new BigDecimal(70)));
	}
	
	@Test
	public void senoTestHipotenusaValidoSuperior() throws Exception {
		Calculadora calculadora = new Calculadora();
		assertEquals(new BigDecimal("0.1"), calculadora.seno(new BigDecimal(10), new BigDecimal(100)));
	}
	
	@Test
	public void senoTestCatetoInvalidoSuperior() throws Exception {
		try {
			Calculadora calculadora = new Calculadora();
            BigDecimal resultado = calculadora.seno(new BigDecimal(50.1), new BigDecimal(80));
			fail("Teste falhou: calculadora retornou valor mesmo com cateto maior superior");
		} 
		catch (Exception error) {
			assertEquals( "Cateto deve ser menor que 50!", error.getMessage());
		}
	}
	
	@Test
	public void senoTestCatetoInvalidoInferior() throws Exception {
		try {
			Calculadora calculadora = new Calculadora();
            BigDecimal resultado = calculadora.seno(new BigDecimal(0.9), new BigDecimal(80));
			fail("Teste falhou: calculadora retornou valor mesmo com cateto menor que inferior");
		} 
		catch (Exception error) {
			assertEquals( "Cateto deve ser maior que 1!", error.getMessage());
		}
	}
	
	@Test
	public void senoTestHipotenusaInvalidoInferior() throws Exception {
		try {
			Calculadora calculadora = new Calculadora();
            BigDecimal resultado = calculadora.seno(new BigDecimal(10), new BigDecimal(69.9));
			fail("Teste falhou: calculadora retornou valor mesmo com hipotenusa menor que inferior");
		} 
		catch (Exception error) {
			assertEquals( "Hipotenusa deve ser maior que 70!", error.getMessage());
		}
	}
	
	@Test
	public void senoTestHipotenusaInvalidoSuperior() throws Exception {
		try {
			Calculadora calculadora = new Calculadora();
            BigDecimal resultado = calculadora.seno(new BigDecimal(10), new BigDecimal(100.1));
			fail("Teste falhou: calculadora retornou valor mesmo com hipotenusa maior que superior");
		} 
		catch (Exception error) {
			assertEquals( "Hipotenusa deve ser menor que 100!", error.getMessage());
		}
	}
}
